// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.Services;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(Database))]
    [Migration("20231130155246_ExpandedReport")]
    partial class ExpandedReport
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.13");

            modelBuilder.Entity("backend.Models.Composicao", b =>
                {
                    b.Property<DateOnly>("dia")
                        .HasColumnType("TEXT");

                    b.Property<string>("recurso")
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.Property<int>("adesivo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ajudante")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("atividade")
                        .HasColumnType("INTEGER");

                    b.Property<int>("id_ajudante")
                        .HasColumnType("INTEGER");

                    b.Property<int>("id_motorista")
                        .HasColumnType("INTEGER");

                    b.Property<int>("id_supervisor")
                        .HasColumnType("INTEGER");

                    b.Property<string>("motorista")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("placa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("regional")
                        .HasColumnType("INTEGER");

                    b.Property<string>("supervisor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("telefone")
                        .HasColumnType("INTEGER");

                    b.HasKey("dia", "recurso");

                    b.ToTable("composicao");
                });

            modelBuilder.Entity("backend.Models.Funcionario", b =>
                {
                    b.Property<int>("matricula")
                        .HasColumnType("INTEGER");

                    b.Property<int>("funcao")
                        .HasColumnType("INTEGER");

                    b.Property<string>("nome_colaborador")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("matricula");

                    b.ToTable("funcionario");
                });

            modelBuilder.Entity("backend.Models.Servico", b =>
                {
                    b.Property<long>("indentificador")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan?>("Desloca_estima")
                        .HasColumnType("TEXT");

                    b.Property<string>("area_trabalho")
                        .HasColumnType("TEXT");

                    b.Property<string>("bairro_destino")
                        .HasColumnType("TEXT");

                    b.Property<string>("cidade_destino")
                        .HasColumnType("TEXT");

                    b.Property<string>("codigo_postal")
                        .HasColumnType("TEXT");

                    b.Property<string>("codigos")
                        .HasColumnType("TEXT");

                    b.Property<string>("complemento_destino")
                        .HasColumnType("TEXT");

                    b.Property<double?>("debitos_cliente")
                        .HasColumnType("REAL");

                    b.Property<TimeSpan?>("desloca_feito")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("dia")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan?>("duracao_estima")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan?>("duracao_feito")
                        .HasColumnType("TEXT");

                    b.Property<string>("endereco_destino")
                        .HasColumnType("TEXT");

                    b.Property<string>("filename")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<TimeOnly?>("hora_final")
                        .HasColumnType("TEXT");

                    b.Property<TimeOnly?>("hora_inicio")
                        .HasColumnType("TEXT");

                    b.Property<int?>("id_ajudante")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("id_motorista")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("id_tecnico")
                        .HasColumnType("INTEGER");

                    b.Property<string>("id_viatura")
                        .HasColumnType("TEXT");

                    b.Property<int?>("instalacao")
                        .HasColumnType("INTEGER");

                    b.Property<string>("motivo_indisponibilidade")
                        .HasColumnType("TEXT");

                    b.Property<string>("nome_do_cliente")
                        .HasColumnType("TEXT");

                    b.Property<string>("observacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("recurso")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("referencia_destino")
                        .HasColumnType("TEXT");

                    b.Property<long?>("servico")
                        .HasColumnType("INTEGER");

                    b.Property<int>("status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("tipo_atividade")
                        .HasColumnType("TEXT");

                    b.Property<int?>("tipo_instalacao")
                        .HasColumnType("INTEGER");

                    b.Property<string>("tipo_servico")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("vencimento")
                        .HasColumnType("TEXT");

                    b.HasKey("indentificador");

                    b.ToTable("relatorio");
                });
#pragma warning restore 612, 618
        }
    }
}
