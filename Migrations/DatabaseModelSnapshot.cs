// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.Services;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(Database))]
    partial class DatabaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.13");

            modelBuilder.Entity("backend.Models.Composicao", b =>
                {
                    b.Property<string>("recurso")
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("dia")
                        .HasColumnType("TEXT");

                    b.Property<int>("adesivo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ajudante")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("atividade")
                        .HasColumnType("INTEGER");

                    b.Property<int>("id_ajudante")
                        .HasColumnType("INTEGER");

                    b.Property<int>("id_motorista")
                        .HasColumnType("INTEGER");

                    b.Property<int>("id_supervisor")
                        .HasColumnType("INTEGER");

                    b.Property<string>("motorista")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("placa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("regional")
                        .HasColumnType("INTEGER");

                    b.Property<string>("supervisor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("telefone")
                        .HasColumnType("INTEGER");

                    b.HasKey("recurso", "dia");

                    b.ToTable("composicao");
                });

            modelBuilder.Entity("backend.Models.Servico", b =>
                {
                    b.Property<int>("indentificador")
                        .HasColumnType("INTEGER");

                    b.Property<TimeOnly?>("Desloca_estima")
                        .HasColumnType("TEXT");

                    b.Property<string>("codigos")
                        .HasColumnType("TEXT");

                    b.Property<TimeOnly?>("desloca_feito")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("dia")
                        .HasColumnType("TEXT");

                    b.Property<TimeOnly?>("duracao_estima")
                        .HasColumnType("TEXT");

                    b.Property<TimeOnly?>("duracao_feito")
                        .HasColumnType("TEXT");

                    b.Property<TimeOnly?>("hora_final")
                        .HasColumnType("TEXT");

                    b.Property<TimeOnly?>("hora_inicio")
                        .HasColumnType("TEXT");

                    b.Property<int?>("instalacao")
                        .HasColumnType("INTEGER");

                    b.Property<string>("observacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("recurso")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("servico")
                        .HasColumnType("INTEGER");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("tipo_atividade")
                        .HasColumnType("TEXT");

                    b.Property<string>("tipo_servico")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("indentificador");

                    b.ToTable("servico");
                });
#pragma warning restore 612, 618
        }
    }
}
